model Deck {
  id         String      @id @default(uuid())
  title      String
  userId     String
  type       DeckType
  englishLvl EnglishLvl
  user       User        @relation(fields: [userId], references: [id])
  flashcards Flashcard[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

enum EnglishLvl {
  A1
  A2
  B1
  B2
  C1
  C2
}

enum DeckType {
  DAILY
  REPEATING
}

model Flashcard {
  id             String   @id @default(uuid())
  word           String
  translation    String
  userId         String
  deckId         String?
  user           User     @relation(fields: [userId], references: [id])
  deck           Deck?    @relation(fields: [deckId], references: [id])
  repetition     Int      @default(0)
  easinessFactor Int      @default(0)
  interval       Int      @default(0)
  dueDate        DateTime @default(now())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Interest {
  id    String @id @default(uuid())
  users User[]
  name  String @unique
}

model User {
  id            String      @id @default(uuid())
  email         String      @unique
  password      String
  refreshToken  String?
  dailyComplete Boolean     @default(false)
  daysStreak    Int         @default(0)
  englishLvl    EnglishLvl?
  decks         Deck[]
  interests     Interest[]
  learnedWords  Flashcard[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
